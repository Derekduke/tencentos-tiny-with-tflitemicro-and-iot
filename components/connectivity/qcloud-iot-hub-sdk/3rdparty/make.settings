# 编译类型: release/debug
BUILD_TYPE                  	= release
# Makefile编译打印 echo
DEBUG_MAKEFILE                  = n

# 编译工具链
PLATFORM_CC                 	= gcc
PLATFORM_AR                 	= ar
PLATFORM_OS                 	= linux
PLATFORM_SSL					= mbedtls
PLATFORM_AT_DEV					= esp8266

# 交叉编译工具链示例
# PLATFORM_CC                 = /opt/openwrt/packages/toolchain/mipsel-linux-gcc
# PLATFORM_AR                 = /opt/openwrt/packages/toolchain/mipsel-linux-ar
# PLATFORM_CC                 = armcc
# PLATFORM_AR                 = armar

# 是否打开MQTT通道的总开关
FEATURE_MQTT_COMM_ENABLED               = y

# 是否打开设备影子的总开关
FEATURE_MQTT_DEVICE_SHADOW              = y

# 是否打开CoAP通道的总开关
FEATURE_COAP_COMM_ENABLED               = n

# 是否打开MQTT通道网关功能
FEATURE_GATEWAY_ENABLED                 = y

# 是否打开OTA固件升级总开关
FEATURE_OTA_COMM_ENABLED                = y

# OTA信令通道类型：MQTT/COAP
FEATURE_OTA_SIGNAL_CHANNEL              = MQTT

# MQTT/CoAP接入认证方式，使用证书认证：CERT；使用密钥认证：KEY
FEATURE_AUTH_MODE				        = KEY

# 接入认证是否不使用TLS，证书方式必须选择使用TLS，密钥认证可选择不使用TLS
FEATURE_AUTH_WITH_NOTLS					= n

# 是否使能设备动态注册
FEATURE_DEV_DYN_REG_ENABLED             = n

# 是否打开日志上报云端功能
FEATURE_LOG_UPLOAD_ENABLED              = n

# 是否打开获取iot后台时间功能
FEATURE_SYSTEM_COMM_ENABLED             = y

# 是否打开多线程功能支持
FEATURE_MULTITHREAD_ENABLED             = y

# 是否使用HTTPS下载固件
FEATURE_OTA_USE_HTTPS                   = y

# 是否打开代码中获取设备信息功能，设为n时将从device_info.json中读取设备信息
FEATURE_DEBUG_DEV_INFO_USED             = n

# 是否使用AT方式实现TCP通信
FEATURE_AT_TCP_ENABLED                  = n	

# 是否打开AT模组中断接收功能
FEATURE_AT_UART_RECV_IRQ                = n

# 是否打开AT模组多线程功能
FEATURE_AT_OS_USED                      = n

# 是否打开AT模组调试功能
FEATURE_AT_DEBUG                        = n
